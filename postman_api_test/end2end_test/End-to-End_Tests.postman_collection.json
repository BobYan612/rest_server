{
	"info": {
		"_postman_id": "b83dc2ce-57b3-4c2f-a344-6341e11bd85c",
		"name": "End-to-End Tests",
		"description": "> This collection features end-to-end tests that ensure the entire progcess completed successfully from selecting product items to payment. \n  \n\n## **ü™ê Get started**\n\nThe fictional Intergalactic Bank Services team is responsible for testing the end-to-end workflows in this collection. You can use this collection to validate specific workflows for your team or figure out ways to increase your test coverage and make your applications more resilient.\n\nThe existed API including:\n\n1. `/product/` _Query or update a product item such as \"Rose Apple\"_  \n    `/product/` _GET all trolly items or POST a new trolley item_  \n    `/trolley/` Q_uery or update a trolly item_  \n    `/trolley/` _GET all trolly groups or POST a new trolley group_  \n    `/trolley_group/` _Query or update a trolly group_  \n    `/trolley_group/` _Create a credit card record_  \n    `/credit_card/` _Check the information of the credit card_  \n    `/credit_card/` _POST one transaction_  \n    `/transaction/` _POST A new account_\n    \n\nCheck out the additional sections below or select View complete documentation. For context-sensitive help with a folder or request, look for the documentation icon.\n\n## üßë‚ÄçüíªHow your team can use this collection\n\n- **Use the mock server to speed up development:** The Rest server is based on django it may easily to start the test, the github link is: [https://github.com/BobYan612/rest_server](https://github.com/BobYan612/rest_server).\n    \n- **Integrate tests with your CI/CD pipeline:** This comprehensive test suite is a great addition to your existing CI/CD pipeline. Generate the Postman CLI command from the Collection Runner and add this step to your existing checks each time you make a commit affecting this service.\n    \n- **Add a monitor:** If your team is contributing to or relying on this service, it‚Äôs a good idea to keep tabs on the status. Adding a monitor to this collection can give you confidence that the service is up and running and alert you to any breaking changes that may have occurred.\n    \n\n## üîç What we‚Äôre testing\n\n- A very common workflow is the transfer of funds between accounts. We have two scenarios: one which creates all resources and successfully transfers funds, and one which tries the transfer with insufficient funds.\n    \n- During these workflows, we are testing for data correctness, data types, and that data is successfully passed through the system during creation and retrieval.\n    \n\n## üîíA note on authorization\n\nThis API uses an API key-based authorization. In this collection, we set the authorization at the collection level and generate a new API Key for each test run.\n\n## üëÄ View and share run results\n\nInterested in seeing previous run results? We‚Äôre happy to share, and have a few ways for you to stay in the loop:\n\n- **Runs tab:** View past collection runs in the `Runs` tab of this collection. Here, you can see the results of past runs, including who ran them and whether it was via the Collection Runner or the CLI. You can also share individual run reports from this page.\n    \n- **Monitors:** If you have a monitor set up for this collection, you can see historical run information when you select the Monitors tab in the left sidebar. You can also have the results sent to Slack or other services when you set up a corresponding integration.\n    \n\n### ü§ùIncrease test coverage\n\nThe Intergalactic Bank Services team wants your team to have everything they need to successfully test our services with their applications. Is your team utilizing this API in a use case not represented here? Reach out to us on our internal Slack by tagging `@bank-services`. Or add an [inline comment](https://learning.postman.com/docs/collaborating-in-postman/working-with-your-team/discussing-your-work/) to this collection with your test case suggestions.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36779137"
	},
	"item": [
		{
			"name": "Process a VALID transaction",
			"item": [
				{
					"name": "[Setup][0] Clean The Enviornment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clear/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clear",
								""
							]
						},
						"description": "This request generates a new API key and saves it to the collection variables if the request is successful."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/auth",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:07:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "43"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"apiKey\": \"123456789\"\n}"
						}
					]
				},
				{
					"name": "[Setup][1] Generate a New API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"pm.test(\"Should return a object\", function () {",
									"    pm.expect(response, 'The response is not an object').to.be.an('object');",
									"});",
									"",
									"pm.test(\"Should contain the `count` property in the response\", function () {",
									"    pm.expect(response, 'The response does not contain the property').to.haveOwnProperty('count');",
									"});",
									"",
									"pm.test(\"Should contain 'results' in the response\", function () {",
									"    pm.expect(response.results, 'The property is not a array').to.be.a('array');",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "This request generates a new API key and saves it to the collection variables if the request is successful."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/auth",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:07:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "43"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"apiKey\": \"123456789\"\n}"
						}
					]
				},
				{
					"name": "[2] Create A New Account (FromAccount)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"bob\",\r\n    \"password\" : \"bobpassword\",\r\n    \"email\" : \"bob@woolworths.com\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Generates a new account (`fromAccount`), that the funds will be transferred from, and saves the following information if the request is successful:\n\n- Account owner from the request body (saved as collection variable `e2e_user_name_from`)\n- Account id from the response body (saved as collection variable `e2e_user_account_id_from`)"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{payload}}"
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/accounts",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:07:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "22"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"account\": {\n        \"id\": 151\n    }\n}"
						}
					]
				},
				{
					"name": "[4] Get All User Accounts To Confirm Creation Of Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should contain an accounts 'array' in the response\", function () {",
									"    pm.expect(response.results).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Should return the correct account data for the `results` user\", function () {",
									"    pm.expect(response.results[0]).to.be.an(\"object\");",
									"",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Get a list of all accounts to ensure the accounts were created and saved correctly."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/accounts",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "263"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"accounts\": [\n        {\n            \"id\": 151,\n            \"owner\": \"Ford Paucek - FromAccount\",\n            \"balance\": 50,\n            \"currency\": \"COSMIC_COINS\",\n            \"createdAt\": \"2024-03-11T01:07:48.000Z\"\n        },\n        {\n            \"id\": 152,\n            \"owner\": \"Micah Kovacek - ToAccount\",\n            \"balance\": 0,\n            \"currency\": \"COSMIC_COINS\",\n            \"createdAt\": \"2024-03-11T01:07:54.000Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[5] Create A New Product Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should display a successful product message\", function () {",
									"     pm.response.to.be.success;     ",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.collectionVariables.set(\"e2e_product_id\", response.id);",
									"}",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "api-key",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product_id\": \"48211\",\n    \"name\" : \"Mainland Cheese Colby\",\n    \"description\" : \"Block 1kg  $1.35 / 100g\",\n    \"prices\" : [\n\t   { \n\t      \"original_price\" : \"17.39\",\n\t\t  \"save_price\" : \"2.89\",\n\t\t  \"unit\" : \"1kg\"\n\t   }\n\t], \n    \"categories\" : \"Fridge & Deli/Cheese/Block Cheese\",\n    \"product_photo_location\" : \"images/2010/48211.jpg\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/product/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								""
							]
						},
						"description": "Create a new transaction between the `fromAccount` and `toAccount`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "1234"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fromAccountId\": {{e2e_user_account_id_from}},\n    \"toAccountId\": {{e2e_user_account_id_to}},\n    \"amount\": 20,\n    \"currency\": \"COSMIC_COINS\"\n}"
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/transactions",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"transaction\": {\n        \"id\": 67\n    }\n}"
						}
					]
				},
				{
					"name": "[6] Get All Product Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should contain a product 'array' in the response\", function () {",
									"    pm.expect(response).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Should return the correct product data for the current user\", function () {",
									"    pm.expect(response[0]).to.be.an(\"object\");",
									"    pm.expect(response[0].id).to.be.an(\"number\");",
									"    pm.expect(response[0].created).to.match(/(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})/);",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								""
							]
						},
						"description": "Get a list of all transactions to and from the `toAccount`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/transactions?toAccountId={{e2e_user_account_id_to}}",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"transactions"
									],
									"query": [
										{
											"key": "toAccountId",
											"value": "{{e2e_user_account_id_to}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "143"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"transactions\": [\n        {\n            \"id\": 67,\n            \"createdAt\": \"2024-03-11T01:08:15.000Z\",\n            \"fromAccountId\": 151,\n            \"toAccountId\": 152,\n            \"currency\": \"COSMIC_COINS\",\n            \"amount\": 20\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[6] Get Single Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should contain a product object in the response\", function () {",
									"    pm.expect(response).to.be.an('object');",
									"});",
									"",
									"pm.test(\"Should return the correct product id and create date\", function () {",
									"    pm.expect(response.id).to.be.an(\"number\");",
									"    pm.expect(response.created).to.match(/(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})/);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product/{{e2e_product_id}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								"{{e2e_product_id}}",
								""
							]
						},
						"description": "Get a list of all transactions to and from the `toAccount`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/transactions?toAccountId={{e2e_user_account_id_to}}",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"transactions"
									],
									"query": [
										{
											"key": "toAccountId",
											"value": "{{e2e_user_account_id_to}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "143"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"transactions\": [\n        {\n            \"id\": 67,\n            \"createdAt\": \"2024-03-11T01:08:15.000Z\",\n            \"fromAccountId\": 151,\n            \"toAccountId\": 152,\n            \"currency\": \"COSMIC_COINS\",\n            \"amount\": 20\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "[5] Create A New Trolley",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should display a successful trolley message\", function () {",
									"   pm.response.to.have.status(200);",
									"",
									"});",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.collectionVariables.set(\"e2e_trolley_id\", response.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "api-key",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product\" : {{e2e_product_id}},\n    \"count\" : 2,\n    \"notes\" : \"my favorite good\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/trolley/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trolley",
								""
							]
						},
						"description": "Create a new transaction between the `fromAccount` and `toAccount`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "1234"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fromAccountId\": {{e2e_user_account_id_from}},\n    \"toAccountId\": {{e2e_user_account_id_to}},\n    \"amount\": 20,\n    \"currency\": \"COSMIC_COINS\"\n}"
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/transactions",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"transaction\": {\n        \"id\": 67\n    }\n}"
						}
					]
				},
				{
					"name": "[8] Get The Item in Trolley",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json(),",
									"    product_id = parseInt(pm.collectionVariables.get(\"e2e_product_id\")),",
									"    trolley_id = pm.collectionVariables.get(\"e2e_trolley_id\");",
									"",
									"pm.test(\"Should contain a account 'object' in the response\", function () {",
									"    pm.expect(response).to.be.an('object');",
									"});",
									"",
									"pm.test(\"Should contain the correct product in the response\", function () {",
									"    pm.expect(response.product).to.eql(product_id);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/trolley/{{e2e_trolley_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trolley",
								"{{e2e_trolley_id}}"
							]
						},
						"description": "Confirm the balance of the `toAccount` matches the expected value after the transaction."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/accounts/:accountId",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "{{e2e_user_account_id_to}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "136"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"account\": {\n        \"id\": 152,\n        \"owner\": \"Micah Kovacek - ToAccount\",\n        \"balance\": 20,\n        \"currency\": \"COSMIC_COINS\",\n        \"createdAt\": \"2024-03-11T01:07:54.000Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "[5] Create a Trolley Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should display a successful trolley group message\", function () {",
									"     pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"if (pm.response.code === 200) {",
									"    pm.collectionVariables.set(\"e2e_trolley_group_id\", response.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "api-key",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"items\" : [{{e2e_trolley_id}}],\n    \"notes\" : \"bob trolley group\",\n    \"name\" : \"bob_trolley_group\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/trolley_group/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trolley_group",
								""
							]
						},
						"description": "Create a new transaction between the `fromAccount` and `toAccount`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "1234"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fromAccountId\": {{e2e_user_account_id_from}},\n    \"toAccountId\": {{e2e_user_account_id_to}},\n    \"amount\": 20,\n    \"currency\": \"COSMIC_COINS\"\n}"
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/transactions",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"transaction\": {\n        \"id\": 67\n    }\n}"
						}
					]
				},
				{
					"name": "[8] Get The Trolley Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json(),",
									"    trolley_id = pm.collectionVariables.get(\"e2e_trolley_id\");",
									"",
									"pm.test(\"Should contain a trolley 'object' in the response\", function () {",
									"    pm.expect(response).to.be.an('object');",
									"});",
									"",
									"pm.test(\"Should contain the correct product in the response\", function () {",
									"    pm.expect(response.items[0]).to.eql(trolley_id);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/trolley_group/{{e2e_trolley_group_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trolley_group",
								"{{e2e_trolley_group_id}}"
							]
						},
						"description": "Confirm the balance of the `toAccount` matches the expected value after the transaction."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/accounts/:accountId",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "{{e2e_user_account_id_to}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "136"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"account\": {\n        \"id\": 152,\n        \"owner\": \"Micah Kovacek - ToAccount\",\n        \"balance\": 20,\n        \"currency\": \"COSMIC_COINS\",\n        \"createdAt\": \"2024-03-11T01:07:54.000Z\"\n    }\n}"
						}
					]
				},
				{
					"name": "[5] Complete Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Should display a successful transaction status\", function () {",
									"     pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "api-key",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"trolley\" : {{e2e_trolley_group_id}},\n    \"credit_card\" : {\n        \"username\" : \"bobyan\",\n        \"cardnumber\" : \"13412341241243\",\n        \"expirary_date\" : \"2035-06-07 00:00:00\",\n        \"cvc\" : \"323\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								""
							]
						},
						"description": "Create a new transaction between the `fromAccount` and `toAccount`"
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "1234"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"fromAccountId\": {{e2e_user_account_id_from}},\n    \"toAccountId\": {{e2e_user_account_id_to}},\n    \"amount\": 20,\n    \"currency\": \"COSMIC_COINS\"\n}"
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/v1/transactions",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"v1",
										"transactions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "40"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"transaction\": {\n        \"id\": 67\n    }\n}"
						}
					]
				},
				{
					"name": "[Teardown][10] Delete Trolley Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//this request inherits the status check at the folder level."
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/trolley/{{e2e_trolley_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trolley",
								"{{e2e_trolley_id}}"
							]
						},
						"description": "Delete the `toAccount` account to clean up after this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:accountId",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "{{e2e_user_account_id_to}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "[Teardown][10] Delete Trolley",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//this request inherits the status check at the folder level."
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/trolley/{{e2e_trolley_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trolley",
								"{{e2e_trolley_id}}"
							]
						},
						"description": "Delete the `toAccount` account to clean up after this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:accountId",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "{{e2e_user_account_id_to}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:08:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "[Teardown][11] Delete Product Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//clean up all variables now that the folder's run is over",
									"pm.collectionVariables.unset(\"e2e_product_id\")",
									"pm.collectionVariables.unset(\"e2e_trolley_id\")",
									"pm.collectionVariables.unset(\"e2e_trolley_group_id\")",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Password111",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/product/{{e2e_product_id}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"product",
								"{{e2e_product_id}}",
								""
							]
						},
						"description": "Delete the `fromAccount` account and clear out the collection variables we created during this test case."
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://template.postman-echo.com/api/v1/accounts/:accountId",
									"protocol": "https",
									"host": [
										"template",
										"postman-echo",
										"com"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "accountId",
											"value": "{{e2e_user_account_id_from}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 11 Mar 2024 01:09:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "uWebSockets",
									"value": "20"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				}
			],
			"description": "This folder tests a commonly used workflow of creating new accounts and transferring funds between the two.\n\nBecause we expect all requests to succeed in this workflow, we have a **status check test** in the **folder-level Scripts tab**.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//all requests in this folder should be valid",
							"pm.test(\"Folder-level status check\", function () {",
							"    pm.response.to.be.success;",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "OMpqVWAH.UC80wyXTtPwhDgAUdCTx6"
		},
		{
			"key": "e2e_pk",
			"value": ""
		}
	]
}